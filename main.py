#!/usr/bin/python3
#
#
#
#
#       ooooooooo.   oooooo   oooooo     oooo   .oooooo.   
#       `888   `Y88.  `888.    `888.     .8'   d8P'  `Y8b  
#        888   .d88'   `888.   .8888.   .8'   888          
#        888ooo88P'     `888  .8'`888. .8'    888          
#        888             `888.8'  `888.8'     888          
#        888              `888'    `888'      `88b    ooo  
#       o888o              `8'      `8'        `Y8bood8P'  
# 
#       P l a y   W i t h   C h a r a c t e r s
#
#
#
#       Github : https://github.com/V70024/PWC
#       Email V70024 : Zz2f0024@protonmail.com
#       
#       coding: utf-8
#       Form implementation generated from reading ui file 'main-v4.ui'
#       
#       Created by: PyQt5 UI code generator 5.15.4
#       
#       WARNING: Any manual changes made to this file will be lost when pyuic5 is
#       run again.  Do not edit this file unless you know what you are doing.
#       
#
#
#
#                                                                             
# +#++:++#++:+++#++:++#++:+++#++:++#++:+++#++:++#++:+++#++:++#++:++ 
# +#++:++#++:+++#++:++#++:+++#++:++#++:+++#++:++#++:+++#++:++#++:++ 
Github = 'https://github.com/V70024/PWC'
Email = 'Zz2f0024@protonmail.com'
Telegram = '@V70024'



from PyQt5 import QtCore, QtGui, QtWidgets 
from PyQt5.QtWidgets import  QMainWindow, QMessageBox, QFileDialog
from random import randint , seed as random_seed, choice as randChoice

from pathlib import Path as lib_Path
from os import path as os_Path


class Ui_MainWindow(QMainWindow):
    
    BASE_DIR = lib_Path(__file__).resolve().parent
        
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setWindowModality(QtCore.Qt.NonModal)

        fonts = QtGui.QFontDatabase()
        fonts.addApplicationFont(str(Ui_MainWindow.BASE_DIR / 'urw-gothic-l.ttf'))
        self.FontName = "urw gothic book"

        font = QtGui.QFont()
        font.setFamily(self.FontName)
        MainWindow.setFont(font)
        MainWindow.setFocusPolicy(QtCore.Qt.NoFocus)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/imgs/imgs/icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setLayoutDirection(QtCore.Qt.LeftToRight)
        MainWindow.setAutoFillBackground(False)
        
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily(self.FontName)
        self.tabWidget.setFont(font)
        self.tabWidget.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.tabWidget.setIconSize(QtCore.QSize(22, 22))
        self.tabWidget.setElideMode(QtCore.Qt.ElideNone)
        self.tabWidget.setUsesScrollButtons(False)
        self.tabWidget.setDocumentMode(False)
        self.tabWidget.setTabsClosable(False)
        self.tabWidget.setObjectName("tabWidget")
        self.tab_Home = QtWidgets.QWidget()
        self.tab_Home.setObjectName("tab_Home")
        self.gridLayout = QtWidgets.QGridLayout(self.tab_Home)
        self.gridLayout.setObjectName("gridLayout")
        self.groupBox_Home = QtWidgets.QGroupBox(self.tab_Home)
        font = QtGui.QFont()
        font.setFamily(self.FontName)
        self.groupBox_Home.setFont(font)
        self.groupBox_Home.setObjectName("groupBox_Home")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.groupBox_Home)
        self.gridLayout_8.setContentsMargins(-1, 15, -1, -1)
        self.gridLayout_8.setObjectName("gridLayout_8")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_8.addItem(spacerItem, 6, 1, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_8.addItem(spacerItem1, 1, 0, 1, 3)
        self.label_AppVersion = QtWidgets.QLabel(self.groupBox_Home)
        font = QtGui.QFont()
        font.setFamily(self.FontName)
        font.setPointSize(7)
        self.label_AppVersion.setFont(font)
        self.label_AppVersion.setAlignment(QtCore.Qt.AlignCenter)
        self.label_AppVersion.setWordWrap(False)
        self.label_AppVersion.setOpenExternalLinks(False)
        self.label_AppVersion.setObjectName("label_AppVersion")
        self.gridLayout_8.addWidget(self.label_AppVersion, 4, 0, 1, 3)
        self.label_AppName = QtWidgets.QLabel(self.groupBox_Home)
        font = QtGui.QFont()
        font.setFamily(self.FontName)
        font.setPointSize(125)
        font.setBold(False)
        font.setWeight(50)
        self.label_AppName.setFont(font)
        self.label_AppName.setCursor(QtGui.QCursor(QtCore.Qt.ForbiddenCursor))
        self.label_AppName.setAlignment(QtCore.Qt.AlignCenter)
        self.label_AppName.setWordWrap(False)
        self.label_AppName.setOpenExternalLinks(False)
        self.label_AppName.setObjectName("label_AppName")
        self.gridLayout_8.addWidget(self.label_AppName, 2, 0, 1, 3)
        self.label_CodeBy = QtWidgets.QLabel(self.groupBox_Home)
        self.label_CodeBy.setMinimumSize(QtCore.QSize(120, 35))
        font = QtGui.QFont()
        font.setFamily(self.FontName)
        font.setPointSize(9)
        self.label_CodeBy.setFont(font)
        self.label_CodeBy.setObjectName("label_CodeBy")
        self.gridLayout_8.addWidget(self.label_CodeBy, 6, 0, 1, 1)
        self.pushButton_Github = QtWidgets.QPushButton(self.groupBox_Home)
        self.pushButton_Github.setMinimumSize(QtCore.QSize(110, 30))
        self.pushButton_Github.setMaximumSize(QtCore.QSize(150, 30))
        font = QtGui.QFont()
        font.setFamily(self.FontName)
        self.pushButton_Github.setFont(font)
        self.pushButton_Github.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/imgs/imgs/github-96.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_Github.setIcon(icon1)
        self.pushButton_Github.setIconSize(QtCore.QSize(21, 21))
        self.pushButton_Github.setObjectName("pushButton_Github")
        self.gridLayout_8.addWidget(self.pushButton_Github, 6, 2, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_8.addItem(spacerItem2, 5, 0, 1, 3)
        self.label_FullAppName = QtWidgets.QLabel(self.groupBox_Home)
        font = QtGui.QFont()
        font.setFamily(self.FontName)
        font.setPointSize(15)
        self.label_FullAppName.setFont(font)
        self.label_FullAppName.setAlignment(QtCore.Qt.AlignCenter)
        self.label_FullAppName.setWordWrap(False)
        self.label_FullAppName.setOpenExternalLinks(False)
        self.label_FullAppName.setObjectName("label_FullAppName")
        self.gridLayout_8.addWidget(self.label_FullAppName, 3, 0, 1, 3)
        self.gridLayout.addWidget(self.groupBox_Home, 0, 0, 1, 1)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/imgs/imgs/home-96.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget.addTab(self.tab_Home, icon2, "")
        self.tab_ProductionConversion = QtWidgets.QWidget()
        self.tab_ProductionConversion.setObjectName("tab_ProductionConversion")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.tab_ProductionConversion)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.groupBox_Conversion = QtWidgets.QGroupBox(self.tab_ProductionConversion)
        font = QtGui.QFont()
        font.setFamily(self.FontName)
        self.groupBox_Conversion.setFont(font)
        self.groupBox_Conversion.setObjectName("groupBox_Conversion")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.groupBox_Conversion)
        self.gridLayout_6.setContentsMargins(-1, 15, -1, -1)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_8.addItem(spacerItem3)
        self.label_Conversion_Mode = QtWidgets.QLabel(self.groupBox_Conversion)
        font = QtGui.QFont()
        font.setFamily(self.FontName)
        self.label_Conversion_Mode.setFont(font)
        self.label_Conversion_Mode.setObjectName("label_Conversion_Mode")
        self.horizontalLayout_8.addWidget(self.label_Conversion_Mode)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_8.addItem(spacerItem4)
        self.gridLayout_6.addLayout(self.horizontalLayout_8, 1, 0, 1, 1)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.verticalLayout_11 = QtWidgets.QVBoxLayout()
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.pushButton_ConversionInput_InZoom = QtWidgets.QPushButton(self.groupBox_Conversion)
        self.pushButton_ConversionInput_InZoom.setMinimumSize(QtCore.QSize(30, 30))
        self.pushButton_ConversionInput_InZoom.setMaximumSize(QtCore.QSize(30, 30))
        self.pushButton_ConversionInput_InZoom.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_ConversionInput_InZoom.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/imgs/imgs/zoom-in-96.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_ConversionInput_InZoom.setIcon(icon3)
        self.pushButton_ConversionInput_InZoom.setIconSize(QtCore.QSize(15, 15))
        self.pushButton_ConversionInput_InZoom.setObjectName("pushButton_ConversionInput_InZoom")
        self.verticalLayout_11.addWidget(self.pushButton_ConversionInput_InZoom)
        self.pushButton_ConversionInput_OutZoom = QtWidgets.QPushButton(self.groupBox_Conversion)
        self.pushButton_ConversionInput_OutZoom.setMinimumSize(QtCore.QSize(30, 30))
        self.pushButton_ConversionInput_OutZoom.setMaximumSize(QtCore.QSize(30, 30))
        self.pushButton_ConversionInput_OutZoom.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_ConversionInput_OutZoom.setText("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/imgs/imgs/zoom-out-96.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_ConversionInput_OutZoom.setIcon(icon4)
        self.pushButton_ConversionInput_OutZoom.setIconSize(QtCore.QSize(15, 15))
        self.pushButton_ConversionInput_OutZoom.setObjectName("pushButton_ConversionInput_OutZoom")
        self.verticalLayout_11.addWidget(self.pushButton_ConversionInput_OutZoom)
        spacerItem5 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_11.addItem(spacerItem5)
        self.pushButton_ConversionInput_Paste = QtWidgets.QPushButton(self.groupBox_Conversion)
        self.pushButton_ConversionInput_Paste.setMinimumSize(QtCore.QSize(30, 30))
        self.pushButton_ConversionInput_Paste.setMaximumSize(QtCore.QSize(30, 30))
        self.pushButton_ConversionInput_Paste.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_ConversionInput_Paste.setText("")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/imgs/imgs/paste-as-text-96.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_ConversionInput_Paste.setIcon(icon5)
        self.pushButton_ConversionInput_Paste.setIconSize(QtCore.QSize(15, 15))
        self.pushButton_ConversionInput_Paste.setObjectName("pushButton_ConversionInput_Paste")
        self.verticalLayout_11.addWidget(self.pushButton_ConversionInput_Paste)
        self.pushButton_ConversionInput_Copy = QtWidgets.QPushButton(self.groupBox_Conversion)
        self.pushButton_ConversionInput_Copy.setMinimumSize(QtCore.QSize(30, 30))
        self.pushButton_ConversionInput_Copy.setMaximumSize(QtCore.QSize(30, 30))
        self.pushButton_ConversionInput_Copy.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_ConversionInput_Copy.setText("")
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/imgs/imgs/copy-96.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_ConversionInput_Copy.setIcon(icon6)
        self.pushButton_ConversionInput_Copy.setIconSize(QtCore.QSize(15, 15))
        self.pushButton_ConversionInput_Copy.setObjectName("pushButton_ConversionInput_Copy")
        self.verticalLayout_11.addWidget(self.pushButton_ConversionInput_Copy)
        self.pushButton_ConversionInput_Clear = QtWidgets.QPushButton(self.groupBox_Conversion)
        self.pushButton_ConversionInput_Clear.setMinimumSize(QtCore.QSize(30, 30))
        self.pushButton_ConversionInput_Clear.setMaximumSize(QtCore.QSize(30, 30))
        self.pushButton_ConversionInput_Clear.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_ConversionInput_Clear.setText("")
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/imgs/imgs/broom-96.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_ConversionInput_Clear.setIcon(icon7)
        self.pushButton_ConversionInput_Clear.setIconSize(QtCore.QSize(15, 15))
        self.pushButton_ConversionInput_Clear.setObjectName("pushButton_ConversionInput_Clear")
        self.verticalLayout_11.addWidget(self.pushButton_ConversionInput_Clear)
        spacerItem6 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_11.addItem(spacerItem6)
        self.pushButton_ConversionInput_InjectionFile = QtWidgets.QPushButton(self.groupBox_Conversion)
        self.pushButton_ConversionInput_InjectionFile.setMinimumSize(QtCore.QSize(30, 30))
        self.pushButton_ConversionInput_InjectionFile.setMaximumSize(QtCore.QSize(30, 30))
        self.pushButton_ConversionInput_InjectionFile.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_ConversionInput_InjectionFile.setText("")
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/imgs/imgs/open-document-96.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_ConversionInput_InjectionFile.setIcon(icon8)
        self.pushButton_ConversionInput_InjectionFile.setIconSize(QtCore.QSize(15, 15))
        self.pushButton_ConversionInput_InjectionFile.setObjectName("pushButton_ConversionInput_InjectionFile")
        self.verticalLayout_11.addWidget(self.pushButton_ConversionInput_InjectionFile)
        self.horizontalLayout.addLayout(self.verticalLayout_11)
        self.textEdit_Conversion_Input = QtWidgets.QTextEdit(self.groupBox_Conversion)
        font = QtGui.QFont()
        font.setFamily(self.FontName)
        self.textEdit_Conversion_Input.setFont(font)
        self.textEdit_Conversion_Input.setObjectName("textEdit_Conversion_Input")
        self.horizontalLayout.addWidget(self.textEdit_Conversion_Input)
        self.verticalLayout_12 = QtWidgets.QVBoxLayout()
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.pushButton_Conversion_Mode_Change = QtWidgets.QPushButton(self.groupBox_Conversion)
        self.pushButton_Conversion_Mode_Change.setMinimumSize(QtCore.QSize(40, 30))
        self.pushButton_Conversion_Mode_Change.setMaximumSize(QtCore.QSize(40, 30))
        self.pushButton_Conversion_Mode_Change.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_Conversion_Mode_Change.setText("")
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/imgs/imgs/left-and-right-arrows-96.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_Conversion_Mode_Change.setIcon(icon9)
        self.pushButton_Conversion_Mode_Change.setObjectName("pushButton_Conversion_Mode_Change")
        self.verticalLayout_12.addWidget(self.pushButton_Conversion_Mode_Change)
        self.pushButton_Conversion_Conversion = QtWidgets.QPushButton(self.groupBox_Conversion)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_Conversion_Conversion.sizePolicy().hasHeightForWidth())
        self.pushButton_Conversion_Conversion.setSizePolicy(sizePolicy)
        self.pushButton_Conversion_Conversion.setMinimumSize(QtCore.QSize(40, 30))
        self.pushButton_Conversion_Conversion.setMaximumSize(QtCore.QSize(30, 20000))
        self.pushButton_Conversion_Conversion.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_Conversion_Conversion.setText("")
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/imgs/imgs/right-96.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_Conversion_Conversion.setIcon(icon10)
        self.pushButton_Conversion_Conversion.setCheckable(False)
        self.pushButton_Conversion_Conversion.setChecked(False)
        self.pushButton_Conversion_Conversion.setObjectName("pushButton_Conversion_Conversion")
        self.verticalLayout_12.addWidget(self.pushButton_Conversion_Conversion)
        self.horizontalLayout.addLayout(self.verticalLayout_12)
        self.textEdit_Conversion_Output = QtWidgets.QTextEdit(self.groupBox_Conversion)
        font = QtGui.QFont()
        font.setFamily(self.FontName)
        self.textEdit_Conversion_Output.setFont(font)
        self.textEdit_Conversion_Output.setTextInteractionFlags(QtCore.Qt.TextSelectableByKeyboard|QtCore.Qt.TextSelectableByMouse)
        self.textEdit_Conversion_Output.setObjectName("textEdit_Conversion_Output")
        self.horizontalLayout.addWidget(self.textEdit_Conversion_Output)
        self.verticalLayout_13 = QtWidgets.QVBoxLayout()
        self.verticalLayout_13.setObjectName("verticalLayout_13")
        self.pushButton_ConversionOutput_InZoom = QtWidgets.QPushButton(self.groupBox_Conversion)
        self.pushButton_ConversionOutput_InZoom.setMinimumSize(QtCore.QSize(30, 30))
        self.pushButton_ConversionOutput_InZoom.setMaximumSize(QtCore.QSize(30, 30))
        self.pushButton_ConversionOutput_InZoom.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_ConversionOutput_InZoom.setText("")
        self.pushButton_ConversionOutput_InZoom.setIcon(icon3)
        self.pushButton_ConversionOutput_InZoom.setIconSize(QtCore.QSize(15, 15))
        self.pushButton_ConversionOutput_InZoom.setObjectName("pushButton_ConversionOutput_InZoom")
        self.verticalLayout_13.addWidget(self.pushButton_ConversionOutput_InZoom)
        self.pushButton_ConversionOutput_OutZoom = QtWidgets.QPushButton(self.groupBox_Conversion)
        self.pushButton_ConversionOutput_OutZoom.setMinimumSize(QtCore.QSize(30, 30))
        self.pushButton_ConversionOutput_OutZoom.setMaximumSize(QtCore.QSize(30, 30))
        self.pushButton_ConversionOutput_OutZoom.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_ConversionOutput_OutZoom.setText("")
        self.pushButton_ConversionOutput_OutZoom.setIcon(icon4)
        self.pushButton_ConversionOutput_OutZoom.setIconSize(QtCore.QSize(15, 15))
        self.pushButton_ConversionOutput_OutZoom.setObjectName("pushButton_ConversionOutput_OutZoom")
        self.verticalLayout_13.addWidget(self.pushButton_ConversionOutput_OutZoom)
        spacerItem7 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_13.addItem(spacerItem7)
        self.pushButton_ConversionOutput_Copy = QtWidgets.QPushButton(self.groupBox_Conversion)
        self.pushButton_ConversionOutput_Copy.setMinimumSize(QtCore.QSize(30, 30))
        self.pushButton_ConversionOutput_Copy.setMaximumSize(QtCore.QSize(30, 30))
        self.pushButton_ConversionOutput_Copy.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_ConversionOutput_Copy.setText("")
        self.pushButton_ConversionOutput_Copy.setIcon(icon6)
        self.pushButton_ConversionOutput_Copy.setIconSize(QtCore.QSize(15, 15))
        self.pushButton_ConversionOutput_Copy.setObjectName("pushButton_ConversionOutput_Copy")
        self.verticalLayout_13.addWidget(self.pushButton_ConversionOutput_Copy)
        spacerItem8 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_13.addItem(spacerItem8)
        self.pushButton_ConversionOutput_SaveFile = QtWidgets.QPushButton(self.groupBox_Conversion)
        self.pushButton_ConversionOutput_SaveFile.setMinimumSize(QtCore.QSize(30, 30))
        self.pushButton_ConversionOutput_SaveFile.setMaximumSize(QtCore.QSize(30, 30))
        self.pushButton_ConversionOutput_SaveFile.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_ConversionOutput_SaveFile.setText("")
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/imgs/imgs/save-96.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_ConversionOutput_SaveFile.setIcon(icon11)
        self.pushButton_ConversionOutput_SaveFile.setIconSize(QtCore.QSize(15, 15))
        self.pushButton_ConversionOutput_SaveFile.setObjectName("pushButton_ConversionOutput_SaveFile")
        self.verticalLayout_13.addWidget(self.pushButton_ConversionOutput_SaveFile)
        self.horizontalLayout.addLayout(self.verticalLayout_13)
        self.gridLayout_6.addLayout(self.horizontalLayout, 2, 0, 1, 1)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.pushButton_Conversion_Clear_Seed = QtWidgets.QPushButton(self.groupBox_Conversion)
        self.pushButton_Conversion_Clear_Seed.setMinimumSize(QtCore.QSize(30, 30))
        self.pushButton_Conversion_Clear_Seed.setMaximumSize(QtCore.QSize(30, 30))
        self.pushButton_Conversion_Clear_Seed.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_Conversion_Clear_Seed.setText("")
        self.pushButton_Conversion_Clear_Seed.setIcon(icon7)
        self.pushButton_Conversion_Clear_Seed.setIconSize(QtCore.QSize(15, 15))
        self.pushButton_Conversion_Clear_Seed.setObjectName("pushButton_Conversion_Clear_Seed")
        self.horizontalLayout_3.addWidget(self.pushButton_Conversion_Clear_Seed)
        self.pushButton_Conversion_Change_Seed = QtWidgets.QPushButton(self.groupBox_Conversion)
        self.pushButton_Conversion_Change_Seed.setMinimumSize(QtCore.QSize(113, 30))
        self.pushButton_Conversion_Change_Seed.setMaximumSize(QtCore.QSize(40, 30))
        font = QtGui.QFont()
        font.setFamily(self.FontName)
        self.pushButton_Conversion_Change_Seed.setFont(font)
        self.pushButton_Conversion_Change_Seed.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/imgs/imgs/reboot-96.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_Conversion_Change_Seed.setIcon(icon12)
        self.pushButton_Conversion_Change_Seed.setIconSize(QtCore.QSize(15, 15))
        self.pushButton_Conversion_Change_Seed.setObjectName("pushButton_Conversion_Change_Seed")
        self.horizontalLayout_3.addWidget(self.pushButton_Conversion_Change_Seed)
        self.lineEdit_Conversion_ChangeSeed = QtWidgets.QLineEdit(self.groupBox_Conversion)
        self.lineEdit_Conversion_ChangeSeed.setMinimumSize(QtCore.QSize(0, 30))
        font = QtGui.QFont()
        font.setFamily(self.FontName)
        self.lineEdit_Conversion_ChangeSeed.setFont(font)
        self.lineEdit_Conversion_ChangeSeed.setText("")
        self.lineEdit_Conversion_ChangeSeed.setObjectName("lineEdit_Conversion_ChangeSeed")
        self.horizontalLayout_3.addWidget(self.lineEdit_Conversion_ChangeSeed)
        self.gridLayout_6.addLayout(self.horizontalLayout_3, 0, 0, 1, 1)
        self.gridLayout_4.addWidget(self.groupBox_Conversion, 1, 0, 1, 1)
        self.groupBox_Production = QtWidgets.QGroupBox(self.tab_ProductionConversion)
        font = QtGui.QFont()
        font.setFamily(self.FontName)
        self.groupBox_Production.setFont(font)
        self.groupBox_Production.setObjectName("groupBox_Production")
        self.gridLayout_10 = QtWidgets.QGridLayout(self.groupBox_Production)
        self.gridLayout_10.setContentsMargins(-1, 15, -1, -1)
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.verticalLayout_19 = QtWidgets.QVBoxLayout()
        self.verticalLayout_19.setObjectName("verticalLayout_19")
        spacerItem9 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_19.addItem(spacerItem9)
        self.horizontalLayout_15 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_15.setObjectName("horizontalLayout_15")
        spacerItem10 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_15.addItem(spacerItem10)
        self.verticalLayout_20 = QtWidgets.QVBoxLayout()
        self.verticalLayout_20.setObjectName("verticalLayout_20")
        self.lineEdit_Production_Seed = QtWidgets.QLineEdit(self.groupBox_Production)
        self.lineEdit_Production_Seed.setMinimumSize(QtCore.QSize(429, 50))
        font = QtGui.QFont()
        font.setFamily(self.FontName)
        font.setPointSize(17)
        self.lineEdit_Production_Seed.setFont(font)
        self.lineEdit_Production_Seed.setCursor(QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.lineEdit_Production_Seed.setStyleSheet("")
        self.lineEdit_Production_Seed.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_Production_Seed.setObjectName("lineEdit_Production_Seed")
        self.verticalLayout_20.addWidget(self.lineEdit_Production_Seed)
        spacerItem11 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_20.addItem(spacerItem11)
        self.horizontalLayout_18 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_18.setObjectName("horizontalLayout_18")
        spacerItem12 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_18.addItem(spacerItem12)
        self.pushButton_Production_Start = QtWidgets.QPushButton(self.groupBox_Production)
        self.pushButton_Production_Start.setMinimumSize(QtCore.QSize(300, 35))
        self.pushButton_Production_Start.setMaximumSize(QtCore.QSize(300, 35))
        font = QtGui.QFont()
        font.setFamily(self.FontName)
        font.setPointSize(17)
        self.pushButton_Production_Start.setFont(font)
        self.pushButton_Production_Start.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_Production_Start.setStyleSheet("")
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/imgs/imgs/quick-mode-on-96.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_Production_Start.setIcon(icon13)
        self.pushButton_Production_Start.setIconSize(QtCore.QSize(24, 24))
        self.pushButton_Production_Start.setObjectName("pushButton_Production_Start")
        self.horizontalLayout_18.addWidget(self.pushButton_Production_Start)
        spacerItem13 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_18.addItem(spacerItem13)
        self.verticalLayout_20.addLayout(self.horizontalLayout_18)
        self.horizontalLayout_15.addLayout(self.verticalLayout_20)
        spacerItem14 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_15.addItem(spacerItem14)
        self.verticalLayout_19.addLayout(self.horizontalLayout_15)
        spacerItem15 = QtWidgets.QSpacerItem(17, 37, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_19.addItem(spacerItem15)
        self.gridLayout_10.addLayout(self.verticalLayout_19, 0, 0, 1, 1)
        self.gridLayout_4.addWidget(self.groupBox_Production, 0, 0, 1, 1)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/imgs/imgs/transition-both-directions-96.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget.addTab(self.tab_ProductionConversion, icon14, "")
        self.verticalLayout_4.addWidget(self.tabWidget)
        self.groupBox_Loading = QtWidgets.QGroupBox(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily(self.FontName)
        self.groupBox_Loading.setFont(font)
        self.groupBox_Loading.setObjectName("groupBox_Loading")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.groupBox_Loading)
        self.gridLayout_2.setContentsMargins(-1, 15, -1, -1)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.progressBar_Loading = QtWidgets.QProgressBar(self.groupBox_Loading)
        self.progressBar_Loading.setMinimumSize(QtCore.QSize(0, 70))
        self.progressBar_Loading.setMaximumSize(QtCore.QSize(16777215, 70))
        font = QtGui.QFont()
        font.setFamily(self.FontName)
        self.progressBar_Loading.setFont(font)
        self.progressBar_Loading.setCursor(QtGui.QCursor(QtCore.Qt.WaitCursor))
        self.progressBar_Loading.setMinimum(0)
        self.progressBar_Loading.setProperty("value", 50)
        self.progressBar_Loading.setObjectName("progressBar_Loading")
        self.gridLayout_2.addWidget(self.progressBar_Loading, 4, 0, 1, 1, QtCore.Qt.AlignBottom)
        spacerItem16 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_2.addItem(spacerItem16, 3, 0, 1, 1)
        spacerItem17 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_2.addItem(spacerItem17, 1, 0, 1, 1)
        self.label_Loadine = QtWidgets.QLabel(self.groupBox_Loading)
        font = QtGui.QFont()
        font.setFamily(self.FontName)
        font.setPointSize(40)
        font.setBold(False)
        font.setWeight(50)
        self.label_Loadine.setFont(font)
        self.label_Loadine.setAlignment(QtCore.Qt.AlignCenter)
        self.label_Loadine.setWordWrap(False)
        self.label_Loadine.setOpenExternalLinks(False)
        self.label_Loadine.setObjectName("label_Loadine")
        self.gridLayout_2.addWidget(self.label_Loadine, 2, 0, 1, 1)
        self.verticalLayout_4.addWidget(self.groupBox_Loading)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        ###########################################################################################
        # +#++:++#++:+++#++:++#++:+++#++:++#++:+++#++:++#++:+++#++:++#++:++#++:+++#++:++#++:++#++:
        ###########################################################################################
        # +#++:++#++:+++#++:++#++:+++#++:++#++:+++#++:++#++:+++#++:++#++:++#++:+++#++:++#++:++#++:
        ###########################################################################################
        #                                 ---- start Code ----                                    #
        
        
        
        self.options = QFileDialog.Options()
        self.options |= QFileDialog.DontUseNativeDialog

        self.DataLanguage = {}
        self.format_file = '.'+'pwc'
        self.default_seed = ''
        
        with open(Ui_MainWindow.BASE_DIR / 'main.qss',"r", encoding='utf-8') as F:  self.StyleSheet_Main= F.read()
        with open(Ui_MainWindow.BASE_DIR / "CARS.txt", 'r', encoding='utf-8') as F: 
            self.Production_ContentList = []
            for item in list((F.read()).replace(' ', '').replace('\n', '') + ' ' + '\t' + '\n'):
                if item not in self.Production_ContentList:
                    self.Production_ContentList.append(item)

        self.Production_ContentListLen = len(self.Production_ContentList)
        self.Production_ContentListLen_100 = self.Production_ContentListLen / 100
            
        MainWindow.resize(650, 400)
        MainWindow.setMinimumSize(QtCore.QSize(650, 400))
        MainWindow.setStyleSheet(self.StyleSheet_Main)
        MainWindow.setWindowTitle("P W C - (Play With Characters)")
        
        self.groupBox_Loading.hide()
        self.groupBox_Conversion.hide()

        self.pushButton_ConversionInput_InjectionFile.hide()
        self.pushButton_ConversionOutput_SaveFile.show()
        
        #### Home
        self.label_AppName.setText("P W C".upper())
        self.label_FullAppName.setText("Play With Characters")
        self.label_AppVersion.setText("version (4.0.0)")
        self.label_CodeBy.setText("Code By : {}".format('V70024'.upper()))
        self.pushButton_Github.clicked.connect(self.HomeGithubBtn)
        
        
        ###############################################################
        #### Production and Conversion 

        ## Production
        self.pushButton_Production_Start.clicked.connect(self.Production_Start_seed)
        self.CarsListRandom = list('0123456789')
        self.LenRandom = self.StandardLenRandom(self.Production_ContentListLen, self.CarsListRandom) 
        
        ## Conversion
        self.pushButton_Conversion_Clear_Seed.clicked.connect(self.Conversion_Clear_Seed)
        self.pushButton_Conversion_Change_Seed.clicked.connect(self.Production_Start_Change_seed)
        
        self.Conversion_Mode = True # True  : "Text to Code"  &  False : "Code to Text"
        self.pushButton_Conversion_Mode_Change.clicked.connect(self.Change_Mode)
        self.pushButton_Conversion_Conversion.clicked.connect(self.Conversion_Language)
        
        # input
        self.pushButton_ConversionInput_InZoom.clicked.connect(self.textEdit_Conversion_Input.zoomIn)
        self.pushButton_ConversionInput_OutZoom.clicked.connect(self.textEdit_Conversion_Input.zoomOut)
        self.pushButton_ConversionInput_Paste.clicked.connect(self.textEdit_Conversion_Input.paste)
        self.pushButton_ConversionInput_Copy.clicked.connect(self.textEdit_Conversion_Input.selectAll)
        self.pushButton_ConversionInput_Copy.clicked.connect(self.textEdit_Conversion_Input.copy)
        self.pushButton_ConversionInput_Copy.clicked.connect(self.textEdit_Conversion_Input.paste)
        self.pushButton_ConversionInput_Clear.clicked.connect(self.textEdit_Conversion_Input.clear)
        
        self.pushButton_ConversionInput_InjectionFile.clicked.connect(self.InjectionFileCodeInput)
        
        # output
        self.pushButton_ConversionOutput_InZoom.clicked.connect(self.textEdit_Conversion_Output.zoomIn)
        self.pushButton_ConversionOutput_OutZoom.clicked.connect(self.textEdit_Conversion_Output.zoomOut)
        self.pushButton_ConversionOutput_Copy.clicked.connect(self.textEdit_Conversion_Output.selectAll)
        self.pushButton_ConversionOutput_Copy.clicked.connect(self.textEdit_Conversion_Output.copy)
        self.pushButton_ConversionOutput_Copy.clicked.connect(self.textEdit_Conversion_Output.paste)
        
        self.pushButton_ConversionOutput_SaveFile.clicked.connect(self.SaveFileCodeOutput)

        
        ###########################################################################################
    

        
    # [Home] btn Github
    def HomeGithubBtn(self):
        if not self.Url_Opener(url=Github):
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Warning)
            msg.setText("Problem opening URL".ljust(150))
            msg.setInformativeText("{} : {}".format('Github', Github))
            msg.setWindowTitle("MessageBox demo")
            msg.setStandardButtons(QMessageBox.Ok )
            # msg.buttonClicked.connect(self.msgbtn)
            msg.exec_()
        
    # [Production] btn Start Create Seed
    def Production_Start_seed(self):
        self.tabWidget.hide()
        self.groupBox_Loading.show()
        ############
        if not bool(self.lineEdit_Production_Seed.text()) : seed = self.default_seed
        else : seed = self.lineEdit_Production_Seed.text()
        self.CreateLanguageData(seed)
        ############
        self.groupBox_Loading.hide()
        self.groupBox_Production.hide()
        self.groupBox_Conversion.show()
        self.tabWidget.show()

    # [Conversion / Production] Change Seed
    def Production_Start_Change_seed(self):
        self.tabWidget.hide()
        self.groupBox_Loading.show()

        if not bool(self.lineEdit_Conversion_ChangeSeed.text()) : seed = self.default_seed
        else : seed = self.lineEdit_Conversion_ChangeSeed.text()
        self.CreateLanguageData(seed)  

        self.lineEdit_Conversion_ChangeSeed.clear()
        self.groupBox_Loading.hide()
        self.tabWidget.show()

    # [Conversion / Production] btn Clear Seed
    def Conversion_Clear_Seed(self):
        self.DataLanguage.clear()
        if not self.Conversion_Mode : self.Change_Mode()
        self.lineEdit_Conversion_ChangeSeed.clear()
        self.lineEdit_Production_Seed.clear()
        self.textEdit_Conversion_Input.clear()
        self.textEdit_Conversion_Output.clear()
        self.groupBox_Production.show()
        self.groupBox_Conversion.hide()

    # [Conversion / Production] btn Translate
    def Conversion_Language(self):
        
        Content = self.textEdit_Conversion_Input.toPlainText()
        LenList = len(list(Content))
        LenList_100 = LenList / 100
        Code, ProgressTotal, ProgressNum = '', 0, 0
        
        if LenList >= 700: ProgressSatus = True
        else : ProgressSatus = False
                
        if ProgressSatus:
            self.tabWidget.hide()
            self.groupBox_Loading.show()                
                
        bool_characters_not_exist = False
        list_characters_not_exist = []
        
        # Text to code 
        if self.Conversion_Mode and bool(Content):
            
            for Item in list(Content) :
                if Item not in self.Production_ContentList:
                    bool_characters_not_exist = True
                    if Item not in list_characters_not_exist: list_characters_not_exist.append(Item)

                if ProgressSatus:
                    ProgressTotal += 1
                    if ProgressTotal >= LenList_100:
                        ProgressTotal = 0
                        ProgressNum += 1
                        self.progressBar_Loading.setProperty("value", round(ProgressNum, 2))

                if Item in self.DataLanguage.keys() :
                    Code += self.DataLanguage.get(Item)
                    
            
        # code to Text
        elif not self.Conversion_Mode and bool(Content.replace(' ', '')):

            Totalcar = ''
            for Item in list(Content.replace(' ', '')) :
                if ProgressSatus:
                    ProgressTotal += 1
                    if ProgressTotal >= LenList_100:
                        ProgressTotal = 0
                        ProgressNum += 1
                        self.progressBar_Loading.setProperty("value", round(ProgressNum, 2))
                        
                Totalcar += Item
                if Totalcar in self.DataLanguage.values() :
                    Code += next((k for k in self.DataLanguage if self.DataLanguage[k] == Totalcar), None)
                    Totalcar = ''
                
            if bool(len(Totalcar)) :  Code = 'Error'
        
        if bool_characters_not_exist :
            Code = f'Send the problem to \nEmail : {Email}\nTelegram : {Telegram}\n-------------------\nThe following characters do not exist\n\n{list_characters_not_exist}'
                
        self.textEdit_Conversion_Output.setPlainText(Code)
        if ProgressSatus:
            self.groupBox_Loading.hide()
            self.tabWidget.show()

    # [Conversion / Production] btn  Enter the code file
    def InjectionFileCodeInput(self):
        Status, FileAddress = self.Open_Er_File()
        if Status:
            with open(FileAddress, 'r', encoding='utf-8') as F:
                self.textEdit_Conversion_Input.setPlainText(F.read())
        
    # [Conversion / Production] btn  Save the code file
    def SaveFileCodeOutput(self):
        Status, FileAddress = self.Save_Er_File()
        if Status:
            if  os_Path.splitext(FileAddress)[1] != self.format_file: FileAddress = os_Path.splitext(FileAddress)[0] + self.format_file
            with open(FileAddress, 'w', encoding='utf-8') as F:
                F.write(self.textEdit_Conversion_Output.toPlainText())



        ###########################################################################################
        ###########################################################################################

    # [Conversion / Production] btn Change Mode  
    # Specifies that "text to code" or "code to text" 
    # if the value of "self.Conversion_Mode" is equal to "True" Mode is equal to "text to code" and 
    # if the value of "self.Conversion_Mode" is equal to "False" Mode Is equal to "code to text"
    def Change_Mode(self):
        if self.Conversion_Mode :
            self.Conversion_Mode = False
            self.label_Conversion_Mode.setText("Code to Text")
            
            self.pushButton_ConversionInput_InjectionFile.show()
            self.pushButton_ConversionOutput_SaveFile.hide()

        elif not self.Conversion_Mode :
            self.Conversion_Mode = True
            self.label_Conversion_Mode.setText("Text to Code")
            
            self.pushButton_ConversionInput_InjectionFile.hide()
            self.pushButton_ConversionOutput_SaveFile.show()

        self.textEdit_Conversion_Input.clear()
        self.textEdit_Conversion_Input.setPlainText(self.textEdit_Conversion_Output.toPlainText())
        self.textEdit_Conversion_Output.clear()    
    
    # Code file opener
    def Open_Er_File(self):
        open_Code_file_name = QFileDialog().getOpenFileName(
            self,
            f"Get file {self.format_file}", 
            '',
            f"{self.format_file} Files (*{self.format_file})", 
            options = self.options, 
            )[0]
        if bool(open_Code_file_name): return (True, open_Code_file_name)
        else: return (False, '')    

    # Code file save
    def Save_Er_File(self):
        savefile_file_name = QFileDialog.getSaveFileName(
            self,
            f"Save file {self.format_file}", 
            str(f"Untitled{self.format_file}"),
            f"{self.format_file} Files (*{self.format_file})", 
            options = self.options 
            )[0]
        
        if bool(savefile_file_name): return (True, savefile_file_name)
        else: return (False, '')
        
    # Determine the number of characters to build the language
    def StandardLenRandom(self, LenCars:int, CarsList:list):
        num = 5   
        while True:
            num += 1
            if num**len(CarsList) >= LenCars: 
                return num

    # Create Language
    def CreateLanguageData(self, seed:str):
        self.DataLanguage.clear()
        ListTotal = []
        TotalNum = 0
        Percentage_num = 0
        random_seed(seed)
        for item in self.Production_ContentList:
            while True:
                rText = ''.join(randChoice(self.CarsListRandom) for i in range(self.LenRandom))
                if not rText in ListTotal:
                    TotalNum += 1
                    ListTotal.append(rText)
                    self.DataLanguage.update({item:rText})
                    if TotalNum >= self.Production_ContentListLen_100: 
                        TotalNum = 0
                        Percentage_num += 1
                        self.progressBar_Loading.setProperty("value", round(Percentage_num, 2))
                    break
        del(ListTotal)
        del(TotalNum)
        del(Percentage_num)
        self.progressBar_Loading.setProperty("value", round(100, 2))

    # Open url in Browser
    def Url_Opener(self,url:str):
        from webbrowser import open as WebOpen
        try: WebOpen(url)               
        except: return False       
        return True



        #                                   ---- end Code ----                                    #
        ###########################################################################################
        # +#++:++#++:+++#++:++#++:+++#++:++#++:+++#++:++#++:+++#++:++#++:++#++:+++#++:++#++:++#++:
        ###########################################################################################
        # +#++:++#++:+++#++:++#++:+++#++:++#++:+++#++:++#++:+++#++:++#++:++#++:+++#++:++#++:++#++:
        ###########################################################################################


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "P W C - (Play With Characters)"))
        self.groupBox_Home.setTitle(_translate("MainWindow", "Home"))
        self.label_AppVersion.setText(_translate("MainWindow", "version (4)"))
        self.label_AppName.setText(_translate("MainWindow", "P W C"))
        self.label_CodeBy.setText(_translate("MainWindow", "Code By : V70024"))
        self.pushButton_Github.setText(_translate("MainWindow", " Github"))
        self.label_FullAppName.setText(_translate("MainWindow", "Play With Characters"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_Home), _translate("MainWindow", "Home"))
        self.groupBox_Conversion.setTitle(_translate("MainWindow", "Conversion"))
        self.label_Conversion_Mode.setText(_translate("MainWindow", "Text to code"))
        self.pushButton_Conversion_Change_Seed.setText(_translate("MainWindow", "Cheng seed"))
        self.lineEdit_Conversion_ChangeSeed.setPlaceholderText(_translate("MainWindow", "Enter new Seed "))
        self.groupBox_Production.setTitle(_translate("MainWindow", "Production"))
        self.lineEdit_Production_Seed.setPlaceholderText(_translate("MainWindow", "Enter seed"))
        self.pushButton_Production_Start.setText(_translate("MainWindow", "START"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_ProductionConversion), _translate("MainWindow", "Production and Conversion "))
        self.groupBox_Loading.setTitle(_translate("MainWindow", "Loading..."))
        self.label_Loadine.setText(_translate("MainWindow", "Loadine..."))


import qrc_rc

if __name__ == "__main__":
    import sys
    try:
        app = QtWidgets.QApplication(sys.argv)
        MainWindow = QtWidgets.QMainWindow()
        ui = Ui_MainWindow()
        ui.setupUi(MainWindow)
        MainWindow.show()
        sys.exit(app.exec_())
    except KeyboardInterrupt:
        print('\nExit')
    